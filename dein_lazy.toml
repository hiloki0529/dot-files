[[plugins]]
# neocomplete
# 補完
repo = 'Shougo/neocomplete.vim'
hook_source = '''
  " Vim起動時にneocompleteを有効にする
  let g:neocomplete#enable_at_startup = 1
  " smartcase有効化. 大文字が入力されるまで大文字小文字の区別を無視する
  let g:neocomplete#enable_smart_case = 1
  " 補完を取り消し
  inoremap <expr><C-g>     neocomplete#undo_completion()
  " 補完候補の共通部分を補完
  inoremap <expr><C-l>     neocomplete#complete_common_string()

  " 3文字以上の単語に対して補完を有効にする
  let g:neocomplete#min_keyword_length = 3
  " 区切り文字まで補完する
  let g:neocomplete#enable_auto_delimiter = 1
  " 1文字目の入力から補完のポップアップを表示
  let g:neocomplete#auto_completion_start_length = 1
  " バックスペースで補完のポップアップを閉じる
  inoremap <expr><BS> neocomplete#smart_close_popup()."<C-h>"
'''
on_i = 1

[[plugins]]
# neosnippet
repo = 'Shougo/neosnippet.vim'
hook_source = '''
    " タブキーで補完候補の選択. スニペット内のジャンプもタブキーでジャンプ・・・・・・③
    imap <expr><TAB> pumvisible() ? "\<C-n>" : neosnippet#jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
    " エンターキーで補完候補の確定. スニペットの展開もエンターキーで確定・・・・・・②
    " エンターキーでの確定はsouce .vimrcしないと出来なかったので C-w で代用
    imap <C-w> <Plug>(neosnippet_expand_or_jump)
    smap <C-w> <Plug>(neosnippet_expand_or_jump)
    imap <expr><CR> neosnippet#expandable() ? "\<Plug>(neosnippet_expand_or_jump)" : pumvisible() ? "\<C-y>" : "\<CR>"
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']

[[plugins]]
# pythonの補完
repo = "davidhalter/jedi-vim"
hook_source = '''
  autocmd FileType python setlocal completeopt-=preview " pydocを非表示
  let g:jedi#popup_select_first = 0 "1個目の候補が入力されるっていう設定を解除
'''
on_ft = ['python']

[[plugins]]
# lexima
# 括弧補完
repo = 'cohama/lexima.vim'
on_i = 1
