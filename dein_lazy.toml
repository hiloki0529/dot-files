[[plugins]]

# neocomplete
# 補完
repo = 'Shougo/deoplete.nvim'
hook_source = '''
  " Vim起動時にdeopleteを有効にする
  let g:deoplete#enable_at_startup = 1
'''
on_i = 1

[[plugins]]
# neosnippet
repo = 'Shougo/neosnippet.vim'
hook_source = '''
    " タブキーで補完候補の選択. スニペット内のジャンプもタブキーでジャンプ・・・・・・③
    imap <expr><TAB> pumvisible() ? "\<C-n>" : neosnippet#jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
    " エンターキーで補完候補の確定. スニペットの展開もエンターキーで確定・・・・・・②
    " エンターキーでの確定はsouce .vimrcしないと出来なかったので C-w で代用
    imap <C-w> <Plug>(neosnippet_expand_or_jump)
    smap <C-w> <Plug>(neosnippet_expand_or_jump)
    imap <expr><CR> neosnippet#expandable() ? "\<Plug>(neosnippet_expand_or_jump)" : pumvisible() ? "\<C-y>" : "\<CR>"
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']

[[plugins]]
# pythonの補完
repo = 'zchee/deoplete-jedi'
hook_source = '''
  g:deoplete#sources#jedi#python_path = expand("~/.pyenv/versions/anaconda3-5.1.0/bin/python")
'''
on_ft = ['python']

[[plugins]]
repo = 'mileszs/ack.vim'
hook_add = '''
    let g:ackprg = 'ag --nogroup --nocolor --column'
    " カーソル下の単語をハイライトしてからAckする
    nmap <silent> <Leader>n "zyiw:let @/ = @z<CR>:set hlsearch<CR>:Ack <C-r>/<CR>
    " @キーを押すと、カーソル下の単語をハイライトしてからAckしてから置換後文字列を入力する状態
    nmap @ <Leader>n:Qfreplace<CR>#
'''

[[plugins]]
repo = 'thinca/vim-qfreplace'
